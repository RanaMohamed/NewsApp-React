{"version":3,"sources":["serviceWorker.js","components/toastr.jsx","axios.js","helpers/schemas.js","components/loginForm.jsx","components/signupForm.jsx","pages/login.jsx","components/post.jsx","pages/home.jsx","components/header.jsx","components/source.jsx","pages/sources.jsx","components/protectedRoute.jsx","App.js","components/scrollToTop.jsx","index.js"],"names":["Boolean","window","location","hostname","match","toastr","options","newestOnTop","positionClass","instance","axios","create","baseURL","process","token","localStorage","getItem","defaults","headers","common","interceptors","request","use","config","console","log","error","Promise","reject","response","data","errors","message","fullname","Joi","string","required","messages","email","pattern","password","min","loginSchema","object","signupSchema","LoginForm","props","useState","isLoading","setIsLoading","setErrors","userContext","useContext","UserContext","history","useHistory","user","setUser","submitHandler","e","a","preventDefault","validate","abortEarly","err","_","details","context","label","post","setLoggedUser","replace","onSubmit","htmlFor","className","type","id","placeholder","value","onChange","target","disabled","SignupForm","Login","isLogin","setIsLogin","Fragment","onClick","Post","alt","title","src","urlToImage","source","name","Date","publishedAt","toLocaleString","content","href","url","rel","Home","posts","setPosts","query","setQuery","page","setPage","total","setTotal","useEffect","get","concat","articles","totalResults","sources","length","getPosts","map","key","style","textAlign","Header","to","Source","onSubscribeChange","subcribeChange","subscribed","unsubscribe","subscribe","category","description","Sources","setSources","getSources","subscribeHandler","srcs","ProtectedRoute","Component","component","rest","render","pathname","state","from","React","createContext","App","then","Provider","removeItem","setItem","filter","path","ScrollToTop","useLocation","scrollTo","top","left","behavior","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7cb60fd9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import toastr from 'toastr';\r\n\r\ntoastr.options.newestOnTop = false;\r\ntoastr.options.positionClass = 'toast-bottom-center';\r\n\r\nexport default toastr;\r\n","import axios from 'axios';\r\nimport toastr from './components/toastr';\r\n\r\nconst instance = axios.create({ baseURL: process.env.REACT_APP_API_URL });\r\n\r\nconst token = localStorage.getItem('token');\r\nif (token) instance.defaults.headers.common['authorization'] = token;\r\n\r\ninstance.interceptors.request.use(\r\n\tfunction (config) {\r\n\t\tconsole.log(config);\r\n\t\treturn config;\r\n\t},\r\n\tfunction (error) {\r\n\t\treturn Promise.reject(error);\r\n\t}\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n\tfunction (response) {\r\n\t\treturn response.data;\r\n\t},\r\n\tfunction (error) {\r\n\t\ttoastr.error(\r\n\t\t\terror.response?.data?.errors\r\n\t\t\t\t? 'Check your data'\r\n\t\t\t\t: error.response?.data?.message\r\n\t\t\t\t? error.response.data.message\r\n\t\t\t\t: error.message\r\n\t\t);\r\n\t\treturn Promise.reject(error.response?.data || {});\r\n\t}\r\n);\r\n\r\nexport default instance;\r\n","import Joi from '@hapi/joi';\r\n\r\n// eslint-disable-next-line no-useless-escape\r\nexport const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nconst fullname = Joi.string().required().messages({\r\n\t'string.empty': 'Full Name should not be empty',\r\n\t'any.required': `Full Name is required`,\r\n});\r\n\r\nconst email = Joi.string().required().pattern(emailRegex).messages({\r\n\t'string.pattern.base': 'Email is invalid',\r\n\t'string.empty': 'Email should not be empty',\r\n\t'any.required': `Email is required`,\r\n});\r\n\r\nconst password = Joi.string().min(8).required().messages({\r\n\t'string.empty': 'Password should not be empty',\r\n\t'string.min': `Password should have a minimum length of {#limit}`,\r\n\t'any.required': `Password is required`,\r\n});\r\nexport const loginSchema = Joi.object({\r\n\temail,\r\n\tpassword,\r\n});\r\n\r\nexport const signupSchema = Joi.object({ fullname, email, password });\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport * as _ from 'lodash';\r\nimport axios from '../axios';\r\nimport { loginSchema } from '../helpers/schemas.js';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../App';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst LoginForm = (props) => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [errors, setErrors] = useState({});\r\n\r\n\tconst userContext = useContext(UserContext);\r\n\tconst history = useHistory();\r\n\r\n\tconst [user, setUser] = useState({ email: '', password: '' });\r\n\r\n\tconst submitHandler = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetIsLoading(true);\r\n\t\tconst { error } = loginSchema.validate(user, { abortEarly: false });\r\n\t\tif (error) {\r\n\t\t\tconst err = _.keyBy(error.details, (e) => e.context.label);\r\n\t\t\tsetErrors(err);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst data = await axios.post('user/login', user);\r\n\t\t\tuserContext.setLoggedUser(data);\r\n\t\t\thistory.replace('/');\r\n\t\t\treturn;\r\n\t\t} catch (errors) {\r\n\t\t\tsetErrors(errors);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<label htmlFor='Email' className='label'>\r\n\t\t\t\tEmail\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\tclassName='input'\r\n\t\t\t\ttype='text'\r\n\t\t\t\tid='Email'\r\n\t\t\t\tplaceholder='Email'\r\n\t\t\t\tvalue={user.email}\r\n\t\t\t\tonChange={(e) => setUser({ ...user, email: e.target.value })}\r\n\t\t\t/>\r\n\t\t\t<span className='error-message'>{errors.email?.message}</span>\r\n\t\t\t<label htmlFor='Password' className='label'>\r\n\t\t\t\tPassword\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\tclassName='input'\r\n\t\t\t\ttype='password'\r\n\t\t\t\tid='Password'\r\n\t\t\t\tplaceholder='Password'\r\n\t\t\t\tvalue={user.password}\r\n\t\t\t\tonChange={(e) => setUser({ ...user, password: e.target.value })}\r\n\t\t\t/>\r\n\t\t\t<span className='error-message'>{errors.password?.message}</span>\r\n\t\t\t<button\r\n\t\t\t\ttype='submit'\r\n\t\t\t\tdisabled={isLoading}\r\n\t\t\t\tclassName={'btn' + (isLoading ? ' loading' : '')}\r\n\t\t\t>\r\n\t\t\t\t{!isLoading && 'Login'}\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useContext } from 'react';\r\nimport { UserContext } from '../App';\r\nimport { useHistory } from 'react-router';\r\nimport * as _ from 'lodash';\r\nimport axios from '../axios';\r\nimport { signupSchema } from '../helpers/schemas.js';\r\n\r\nconst SignupForm = () => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [errors, setErrors] = useState({});\r\n\r\n\tconst userContext = useContext(UserContext);\r\n\tconst history = useHistory();\r\n\r\n\tconst [user, setUser] = useState({ fullname: '', email: '', password: '' });\r\n\r\n\tconst submitHandler = async (e) => {\r\n\t\te.preventDefault();\r\n\t\tsetIsLoading(true);\r\n\t\tconst { error } = signupSchema.validate(user, { abortEarly: false });\r\n\t\tif (error) {\r\n\t\t\tconst err = _.keyBy(error.details, (e) => e.context.label);\r\n\t\t\tsetErrors(err);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tconst data = await axios.post('user/register', user);\r\n\t\t\tuserContext.setLoggedUser(data);\r\n\t\t\thistory.replace('/');\r\n\t\t\treturn;\r\n\t\t} catch (errors) {\r\n\t\t\tsetErrors(errors);\r\n\t\t}\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<form onSubmit={submitHandler}>\r\n\t\t\t<label htmlFor='Full Name' className='label'>\r\n\t\t\t\tFull Name\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\tclassName='input'\r\n\t\t\t\ttype='text'\r\n\t\t\t\tid='Fullname'\r\n\t\t\t\tplaceholder='Full Name'\r\n\t\t\t\tvalue={user.fullname}\r\n\t\t\t\tonChange={(e) => setUser({ ...user, fullname: e.target.value })}\r\n\t\t\t/>\r\n\t\t\t<span className='error-message'>{errors.fullname?.message}</span>\r\n\t\t\t<label htmlFor='Email' className='label'>\r\n\t\t\t\tEmail\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\tclassName='input'\r\n\t\t\t\ttype='text'\r\n\t\t\t\tid='Email'\r\n\t\t\t\tplaceholder='Email'\r\n\t\t\t\tvalue={user.email}\r\n\t\t\t\tonChange={(e) => setUser({ ...user, email: e.target.value })}\r\n\t\t\t/>\r\n\t\t\t<span className='error-message'>{errors.email?.message}</span>\r\n\r\n\t\t\t<label htmlFor='Password' className='label'>\r\n\t\t\t\tPassword\r\n\t\t\t</label>\r\n\t\t\t<input\r\n\t\t\t\tclassName='input'\r\n\t\t\t\ttype='password'\r\n\t\t\t\tid='Password'\r\n\t\t\t\tplaceholder='Password'\r\n\t\t\t\tvalue={user.password}\r\n\t\t\t\tonChange={(e) => setUser({ ...user, password: e.target.value })}\r\n\t\t\t/>\r\n\t\t\t<span className='error-message'>{errors.password?.message}</span>\r\n\r\n\t\t\t<button\r\n\t\t\t\ttype='submit'\r\n\t\t\t\tdisabled={isLoading}\r\n\t\t\t\tclassName={'btn' + (isLoading ? ' loading' : '')}\r\n\t\t\t>\r\n\t\t\t\t{!isLoading && 'Signup'}\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default SignupForm;\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport LoginForm from '../components/loginForm';\r\nimport SignupForm from '../components/signupForm';\r\n\r\nconst Login = (props) => {\r\n\tconst [isLogin, setIsLogin] = useState(true);\r\n\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div className='login container'>\r\n\t\t\t\t<div className='login__img'></div>\r\n\t\t\t\t<div className='login__form'>\r\n\t\t\t\t\t<div className='tabs'>\r\n\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\tclassName={'tab subtitle' + (isLogin ? ' tab--active' : '')}\r\n\t\t\t\t\t\t\tonClick={() => setIsLogin(true)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t<h1\r\n\t\t\t\t\t\t\tclassName={'tab subtitle' + (!isLogin ? ' tab--active' : '')}\r\n\t\t\t\t\t\t\tonClick={() => setIsLogin(false)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSignup\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='tabs-body'>\r\n\t\t\t\t\t\t{isLogin ? <LoginForm /> : <SignupForm />}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst Post = ({ post }) => {\r\n\treturn (\r\n\t\t<div className='post'>\r\n\t\t\t<div className='post__img'>\r\n\t\t\t\t<img alt={post.title} src={post.urlToImage} />\r\n\t\t\t</div>\r\n\t\t\t<div className='post__text'>\r\n\t\t\t\t<p>{post.source?.name}</p>\r\n\t\t\t\t<p className='post__date'>\r\n\t\t\t\t\t{new Date(post.publishedAt).toLocaleString()}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className='subtitle'>{post.title}</p>\r\n\t\t\t\t<p className='post__content'>\r\n\t\t\t\t\t{post.content?.replace(/\\[\\+.* chars\\]/, '')}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div className='post__overlay'>\r\n\t\t\t\t<a\r\n\t\t\t\t\tclassName='btn'\r\n\t\t\t\t\thref={post.url}\r\n\t\t\t\t\ttarget='_blank'\r\n\t\t\t\t\trel='noopener noreferrer'\r\n\t\t\t\t>\r\n\t\t\t\t\tRead More\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Post;\r\n","import React, { useContext } from 'react';\r\nimport { useState } from 'react';\r\nimport Post from '../components/post';\r\nimport { useEffect } from 'react';\r\nimport axios from '../axios';\r\nimport { UserContext } from '../App';\r\n\r\nconst Home = () => {\r\n\tconst [posts, setPosts] = useState([]);\r\n\tconst [query, setQuery] = useState('');\r\n\tconst [page, setPage] = useState(1);\r\n\tconst [total, setTotal] = useState(0);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst userContext = useContext(UserContext);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getPosts() {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst data = await axios.get(`news?page=${page}&q=${query}`);\r\n\t\t\tsetPosts((posts) => posts.concat(data.articles));\r\n\t\t\tsetTotal(data.totalResults);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t\tuserContext.user?.sources?.length > 0 && getPosts();\r\n\t}, [page, query, userContext.user]);\r\n\r\n\tconst loadMore = () => {\r\n\t\tsetPage((page) => page + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<div className='search-row'>\r\n\t\t\t\t<h1 className='title'>Latest News</h1>\r\n\t\t\t\t<div className='input-icon'>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tclassName='input'\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tplaceholder='Search'\r\n\t\t\t\t\t\tvalue={query}\r\n\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\tsetPosts([]);\r\n\t\t\t\t\t\t\tsetPage(1);\r\n\t\t\t\t\t\t\tsetQuery(e.target.value);\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<i className='search icon'></i>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{userContext.user?.sources?.length > 0 ? (\r\n\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t<div className='posts'>\r\n\t\t\t\t\t\t{posts.map((post) => (\r\n\t\t\t\t\t\t\t<Post key={post.title} post={post}></Post>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{total > posts.length && (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName={'btn btn-center' + (isLoading ? ' loading' : '')}\r\n\t\t\t\t\t\t\tdisabled={isLoading}\r\n\t\t\t\t\t\t\tonClick={loadMore}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{!isLoading && 'Load More'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</React.Fragment>\r\n\t\t\t) : (\r\n\t\t\t\t<h1 style={{ textAlign: 'center' }}>\r\n\t\t\t\t\tPlease subscribe to a source first\r\n\t\t\t\t</h1>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useContext } from 'react';\r\nimport { UserContext } from '../App';\r\n\r\nconst Header = () => {\r\n\tconst userContext = useContext(UserContext);\r\n\r\n\treturn (\r\n\t\t<div className='header'>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='logo'>NEWS.</div>\r\n\t\t\t\t<div className='nav'>\r\n\t\t\t\t\t{userContext.user ? (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t\t<Link className='nav-link' to='home'>\r\n\t\t\t\t\t\t\t\tHome\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<Link className='nav-link' to='sources'>\r\n\t\t\t\t\t\t\t\tSources\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t<span className='nav-link'>\r\n\t\t\t\t\t\t\t\tWelcome back {userContext.user?.fullname}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName='nav-link'\r\n\t\t\t\t\t\t\t\tonClick={() => userContext.setLoggedUser()}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tLogout\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Link className='nav-link' to='login'>\r\n\t\t\t\t\t\t\tLogin\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useContext } from 'react';\r\nimport axios from '../axios';\r\nimport { UserContext } from '../App';\r\n\r\nconst Source = ({ source, onSubscribeChange }) => {\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tconst userContext = useContext(UserContext);\r\n\r\n\tconst subcribeChange = async () => {\r\n\t\tsetIsLoading(true);\r\n\t\tawait axios.post(\r\n\t\t\t`source/${source.subscribed ? 'unsubscribe' : 'subscribe'}/${source.id}`\r\n\t\t);\r\n\t\tsource.subscribed\r\n\t\t\t? userContext.unsubscribe(source.id)\r\n\t\t\t: userContext.subscribe(source.id);\r\n\t\tonSubscribeChange(source.id);\r\n\t\tsetIsLoading(false);\r\n\t};\r\n\treturn (\r\n\t\t<div className='post post--justify'>\r\n\t\t\t<div className='post__text'>\r\n\t\t\t\t<p className='post__date'>{source.category}</p>\r\n\t\t\t\t<p className='subtitle'>{source.name}</p>\r\n\t\t\t\t<p>{source.description}</p>\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\tclassName={\r\n\t\t\t\t\t'btn btn-center' +\r\n\t\t\t\t\t(isLoading ? ' loading' : '') +\r\n\t\t\t\t\t(source.subscribed ? '' : ' btn--secondary')\r\n\t\t\t\t}\r\n\t\t\t\tdisabled={isLoading}\r\n\t\t\t\tonClick={subcribeChange}\r\n\t\t\t>\r\n\t\t\t\t{!isLoading && (source.subscribed ? 'Unsubscribe' : 'Subscribe')}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Source;\r\n","import React, { useEffect } from 'react';\r\nimport Source from '../components/source';\r\nimport { useState } from 'react';\r\n\r\nimport axios from '../axios';\r\n\r\nconst Sources = () => {\r\n\tconst [sources, setSources] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tasync function getSources() {\r\n\t\t\tsetIsLoading(true);\r\n\t\t\tconst data = await axios.get('sources');\r\n\t\t\tsetSources(data);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}\r\n\t\tgetSources();\r\n\t}, []);\r\n\r\n\tconst subscribeHandler = (source) => {\r\n\t\tsetSources((srcs) =>\r\n\t\t\tsrcs.map((src) =>\r\n\t\t\t\tsrc.id === source ? { ...src, subscribed: !src.subscribed } : src\r\n\t\t\t)\r\n\t\t);\r\n\t};\r\n\treturn (\r\n\t\t<div className='container'>\r\n\t\t\t<h1 className='title'>Sources {isLoading}</h1>\r\n\t\t\t{!isLoading ? (\r\n\t\t\t\t<div className='posts'>\r\n\t\t\t\t\t{sources.map((source) => (\r\n\t\t\t\t\t\t<Source\r\n\t\t\t\t\t\t\tkey={source.id}\r\n\t\t\t\t\t\t\tsource={source}\r\n\t\t\t\t\t\t\tonSubscribeChange={subscribeHandler}\r\n\t\t\t\t\t\t></Source>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<button className='btn btn-center loading'></button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Sources;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) =>\r\n\t\t\t\tlocalStorage.getItem('token') ? (\r\n\t\t\t\t\t<Component {...props} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Redirect\r\n\t\t\t\t\t\tto={{ pathname: '/login', state: { from: props.location } }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router';\nimport Login from './pages/login';\nimport Home from './pages/home';\nimport Header from './components/header';\nimport Sources from './pages/sources';\nimport ProtectedRoute from './components/protectedRoute';\nimport axios from './axios';\n\nexport const UserContext = React.createContext();\n\nfunction App() {\n\tconst [user, setUser] = useState(null);\n\tuseEffect(() => {\n\t\tlocalStorage.getItem('token') &&\n\t\t\taxios.get('user').then((data) => setUser(data.user));\n\t}, []);\n\n\tconst subscribe = (source) => {\n\t\tsetUser((user) => ({ ...user, sources: user.sources.concat(source) }));\n\t};\n\tconst unsubscribe = (source) => {\n\t\tsetUser((user) => ({\n\t\t\t...user,\n\t\t\tsources: user.sources.filter((src) => src !== source),\n\t\t}));\n\t};\n\tconst setLoggedUser = (data) => {\n\t\tif (!data) {\n\t\t\tsetUser(null);\n\t\t\tlocalStorage.removeItem('token');\n\t\t\tdelete axios.defaults.headers.common['authorization'];\n\t\t\treturn;\n\t\t}\n\t\tsetUser(data.user);\n\t\tlocalStorage.setItem('token', data.token);\n\t\taxios.defaults.headers.common['authorization'] = data.token;\n\t};\n\treturn (\n\t\t<div className='App'>\n\t\t\t<UserContext.Provider\n\t\t\t\tvalue={{ user, setUser, setLoggedUser, subscribe, unsubscribe }}\n\t\t\t>\n\t\t\t\t<Header></Header>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path='/login' component={Login}></Route>\n\t\t\t\t\t<ProtectedRoute path='/sources' component={Sources}></ProtectedRoute>\n\t\t\t\t\t<ProtectedRoute path='/' component={Home}></ProtectedRoute>\n\t\t\t\t\t{/* <Route path='/sources' component={Sources}></Route>\n\t\t\t\t<Route path='/' component={Home}></Route> */}\n\t\t\t\t</Switch>\n\t\t\t</UserContext.Provider>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst ScrollToTop = (props) => {\r\n\tconst { pathname } = useLocation();\r\n\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\r\n\t}, [pathname]);\r\n\r\n\treturn null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './css/reset.css';\nimport './css/index.css';\nimport './css/toastr.min.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport ScrollToTop from './components/scrollToTop';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<ScrollToTop />\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}